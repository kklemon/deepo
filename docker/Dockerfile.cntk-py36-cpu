# ==================================================================
# module list
# ------------------------------------------------------------------
# python        3.6    (apt)
# opencv        3.4.3  (git)
# cntk          latest (pip)
# ==================================================================

FROM ubuntu:16.04
RUN APT_INSTALL="apt-get install -y --no-install-recommends"
RUN PIP_INSTALL="python -m pip --no-cache-dir install --upgrade"
RUN GIT_CLONE="git clone --depth 10"

RUN rm -rf /var/lib/apt/lists/* \
        /etc/apt/sources.list.d/cuda.list \
        /etc/apt/sources.list.d/nvidia-ml.list

RUN apt-get update

# ==================================================================
# tools
# ==================================================================

RUN DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        build-essential \
        ca-certificates \
        cmake \
        wget \
        git \
        vim

# ==================================================================
# python
# ==================================================================

RUN DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        software-properties-common
RUN add-apt-repository ppa:deadsnakes/ppa
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        python3.6 \
        python3.6-dev
RUN wget -O ~/get-pip.py \
        https://bootstrap.pypa.io/get-pip.py
RUN python3.6 ~/get-pip.py
RUN ln -s /usr/bin/python3.6 /usr/local/bin/python3
RUN ln -s /usr/bin/python3.6 /usr/local/bin/python
RUN $PIP_INSTALL setuptools
RUN $PIP_INSTALL \
        numpy \
        scipy \
        pandas \
        cloudpickle \
        scikit-learn \
        matplotlib \
        Cython

# ==================================================================
# boost
# ==================================================================

RUN wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz
RUN tar -zxf ~/boost.tar.gz -C ~
RUN cd ~/boost_*
RUN ./bootstrap.sh --with-python=python3.6
RUN ./b2 install --prefix=/usr/local

# ==================================================================
# opencv
# ==================================================================

RUN DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        libatlas-base-dev \
        libgflags-dev \
        libgoogle-glog-dev \
        libhdf5-serial-dev \
        libleveldb-dev \
        liblmdb-dev \
        libprotobuf-dev \
        libsnappy-dev \
        protobuf-compiler

RUN $GIT_CLONE --branch 3.4.3 https://github.com/opencv/opencv ~/opencv
RUN mkdir -p ~/opencv/build
RUN cd ~/opencv/build

RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
          -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D WITH_IPP=OFF \
          -D WITH_CUDA=OFF \
          -D WITH_OPENCL=OFF \
          -D BUILD_TESTS=OFF \
          -D BUILD_PERF_TESTS=OFF \
          ..
RUN make -j"$(nproc)" install

# ==================================================================
# cntk
# ==================================================================

RUN DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        openmpi-bin \
        libpng-dev \
        libtiff-dev \
        libjasper-dev
RUN wget --no-verbose -O - https://github.com/01org/mkl-dnn/releases/download/v0.14/mklml_lnx_2018.0.3.20180406.tgz | tar -xzf -
RUN cp mklml*/* /usr/local -r
RUN wget --no-verbose -O - https://github.com/01org/mkl-dnn/archive/v0.14.tar.gz | tar -xzf -
RUN cd mkl-dnn-0.14 && mkdir build && cd build
RUN ln -s /usr/local external
RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
          -D CMAKE_INSTALL_PREFIX=/usr/local \
          ..
RUN make -j"$(nproc)" install

RUN $PIP_INSTALL cntk

# ==================================================================
# config & cleanup
# ==================================================================

RUN ldconfig
RUN apt-get clean
RUN apt-get autoremove
RUN rm -rf /var/lib/apt/lists/* /tmp/* ~/*

